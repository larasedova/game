# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å random –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
import random
from datetime import datetime  # –î–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞—Ç—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤


class ScoreBoard:
    """
    –ö–ª–∞—Å—Å –¥–ª—è –≤–µ–¥–µ–Ω–∏—è —Å—á–µ—Ç–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–≥—Ä—ã.

    –ê—Ç—Ä–∏–±—É—Ç—ã:
        player_wins (int): –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥ –∏–≥—Ä–æ–∫–∞
        computer_wins (int): –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
        draws (int): –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∏—á—å–∏—Ö
    """

    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å—á–µ—Ç—á–∏–∫–∏ –ø–æ–±–µ–¥ –∏ –Ω–∏—á—å–∏—Ö"""
        self.player_wins = 0
        self.computer_wins = 0
        self.draws = 0

    def update_score(self, result):
        """
        –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—á–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Ä–∞—É–Ω–¥–∞.

        –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
            result (str): –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—É–Ω–¥–∞ ('player', 'computer' –∏–ª–∏ 'draw')
        """
        if result == 'player':
            self.player_wins += 1
        elif result == 'computer':
            self.computer_wins += 1
        else:
            self.draws += 1

    def display_score(self):
        """–í—ã–≤–æ–¥–∏—Ç —Ç–µ–∫—É—â–∏–π —Å—á–µ—Ç –Ω–∞ —ç–∫—Ä–∞–Ω"""
        print(f"\n–¢–µ–∫—É—â–∏–π —Å—á–µ—Ç:")
        print(f"–ò–≥—Ä–æ–∫: {self.player_wins} –ø–æ–±–µ–¥")
        print(f"–ö–æ–º–ø—å—é—Ç–µ—Ä: {self.computer_wins} –ø–æ–±–µ–¥")
        print(f"–ù–∏—á—å–∏: {self.draws}")
        print("=" * 30)

    def save_to_file(self):
        """
        –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–≥—Ä—ã –≤ —Ñ–∞–π–ª scores.txt.
        –§–æ—Ä–º–∞—Ç: –î–∞—Ç–∞ | –ü–æ–±–µ–¥ –∏–≥—Ä–æ–∫–∞ | –ü–æ–±–µ–¥ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ | –ù–∏—á—å–∏—Ö
        """
        with open('scores.txt', 'a', encoding='utf-8') as f:
            timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            f.write(f"{timestamp} | {self.player_wins} | {self.computer_wins} | {self.draws}\n")


def determine_winner(user_choice, computer_choice):
    """
    –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è —Ä–∞—É–Ω–¥–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è ScoreBoard.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        tuple: (—Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≤—ã–≤–æ–¥–∞, —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è —Å—á–µ—Ç–∞)
    """
    if user_choice == computer_choice:
        return ("ü§ù –ù–∏—á—å—è!", 'draw')

    win_conditions = {'–∫': '–Ω', '–Ω': '–±', '–±': '–∫'}
    if win_conditions[user_choice] == computer_choice:
        return ("üéâ –í—ã –ø–æ–±–µ–¥–∏–ª–∏!", 'player')
    else:
        return ("üíª –ö–æ–º–ø—å—é—Ç–µ—Ä –ø–æ–±–µ–¥–∏–ª!", 'computer')


def main_game_loop():
    """–û—Å–Ω–æ–≤–Ω–æ–π –∏–≥—Ä–æ–≤–æ–π —Ü–∏–∫–ª —Å —Å–∏—Å—Ç–µ–º–æ–π –ø–æ–¥—Å—á–µ—Ç–∞ –æ—á–∫–æ–≤"""
    print("üéÆ –ö–∞–º–µ–Ω—å, –ù–æ–∂–Ω–∏—Ü—ã, –ë—É–º–∞–≥–∞!")
    print("üëâ –î–ª—è –≤—ã—Ö–æ–¥–∞ –≤–≤–µ–¥–∏—Ç–µ '–≤—ã—Ö–æ–¥'\n")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—á–µ—Ç—á–∏–∫
    scoreboard = ScoreBoard()

    while True:
        user_choice = get_user_choice()

        if user_choice == '–≤—ã—Ö–æ–¥':
            print("\nüñêÔ∏è –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            # –ü–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            scoreboard.save_to_file()
            break

        computer_choice = get_computer_choice()
        print(f"\nüëâ –í—ã: {user_choice}\nüíª –ö–æ–º–ø—å—é—Ç–µ—Ä: {computer_choice}")

        # –ü–æ–ª—É—á–∞–µ–º –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è —Å—á–µ—Ç–∞
        message, result = determine_winner(user_choice, computer_choice)
        print(f"\n{message}")

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç
        scoreboard.update_score(result)
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—á–µ—Ç
        scoreboard.display_score()


def get_computer_choice():
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        '–∫' - –∫–∞–º–µ–Ω—å
        '–Ω' - –Ω–æ–∂–Ω–∏—Ü—ã
        '–±' - –±—É–º–∞–≥–∞
    """
    # random.choice –≤—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞
    return random.choice(['–∫', '–Ω', '–±'])


def get_user_choice():
    """
    –ü–æ–ª—É—á–∞–µ—Ç –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        '–∫', '–Ω', '–±' - –ø—Ä–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–º –≤–≤–æ–¥–µ
        '–≤—ã—Ö–æ–¥' - –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ –≤—ã—Ö–æ–¥–∞
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç:
        - –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥
        - –ö–æ–º–∞–Ω–¥—ã –≤—ã—Ö–æ–¥–∞
    """
    while True:  # –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª, –ø–æ–∫–∞ –Ω–µ –ø–æ–ª—É—á–∏–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥
        try:
            # –ü–æ–ª—É—á–∞–µ–º –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–∏–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É –∏ —É–¥–∞–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã
            user_input = input("–í—ã–±–µ—Ä–∏—Ç–µ: –∫–∞–º–µ–Ω—å (–∫), –Ω–æ–∂–Ω–∏—Ü—ã (–Ω), –±—É–º–∞–≥–∞ (–±) –∏–ª–∏ '–≤—ã—Ö–æ–¥': ").lower().strip()

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—ã –≤—ã—Ö–æ–¥–∞ (–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã)
            if user_input in ['exit', 'quit', '–≤—ã—Ö–æ–¥', 'q']:
                # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã—Ö–æ–¥–∞
                confirm = input("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤—ã—Ö–æ–¥ (–¥/–Ω): ").lower()
                if confirm in ['–¥', 'y', 'yes', '–¥–∞']:
                    return '–≤—ã—Ö–æ–¥'  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–º–∞–Ω–¥—É –≤—ã—Ö–æ–¥–∞
                continue  # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ü–∏–∫–ª, –µ—Å–ª–∏ –≤—ã—Ö–æ–¥ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∏–≥—Ä–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞
            if user_input not in ['–∫', '–Ω', '–±']:
                print("‚ùå –î–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: –∫, –Ω, –±")
                continue  # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ü–∏–∫–ª –ø—Ä–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–º –≤–≤–æ–¥–µ

            return user_input  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä

        except Exception as e:
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏ –≤–≤–æ–¥–∞
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞: {e}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")


if __name__ == "__main__":
    main_game_loop()